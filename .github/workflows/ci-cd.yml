name: ci-cd
on:
  push:
    branches:
      - deploy-cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Branch
        run : echo "current Branch is .. := ${GITHUB_REF#refs/heads/}"

      - name: Checkout repository üëÄ
        uses: actions/checkout@v2

      - name: Set up JDK üêò
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew üêò
        run: chmod +x gradlew

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle üêò
        run: ./gradlew build

      - name: Add ENV
        env:
          MYSQL_ENV: ${{ secrets.MYSQL_ENV }}
          API_ENV: ${{ secrets.API_ENV }}
          MONGO_ENV: ${{ secrets.MONGO_ENV }}
          ENV_DIR: banggapgo-docker/env
          MYSQL_ENV_NAME: mysql.env
          API_ENV_NAME: api.env
          MONGO_ENV_NAME: mongo.env
        run: |
          echo $MYSQL_ENV | base64 --decode > ENV_DIR/MYSQL_ENV_NAME
          echo $API_ENV | base64 --decode > ENV_DIR/API_ENV_NAME
          echo $MONGO_ENV | base64 --decode > ENV_DIR/MONGO_ENV_NAME

      - name: Build Docker img üêã
        run: |
          docker build -t yjjjwww/banggabgo:${{github.sha}} .
          docker tag yjjjwww/banggabgo:${{github.sha}} yjjjwww/banggabgo:latest

      - name: Log in to Docker registry üêã
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME_TEST }}
          password: ${{ secrets.DOCKER_PASSWORD_TEST }}

      - name: Push Docker ‚úî
        run: |
          docker push yjjjwww/banggabgo:${{github.sha}}
          docker push yjjjwww/banggabgo:latest

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          source: "./banggapgo-docker/docker-compose.yml"
          target: "/home/ubuntu"

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo chmod 666 /var/run/docker.sock
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/cicd-web
            sudo docker compose up -d
            sudo docker image prune -f